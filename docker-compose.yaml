---
version: "3.9"
services:
  coder:
    image: ghcr.io/coder/coder:v2.14.2@sha256:e944afa0ee48dae30d3c24708ec28df3d44461c6f3f5da1d5ff021b3db13a47f
    ports:
    - "${AVAILABLE_PORT:-8080}:8080"
    environment:
      CODER_PG_CONNECTION_URL: "postgresql://coder:coder@database/coder?sslmode=disable"
      CODER_HTTP_ADDRESS: "0.0.0.0:8080"
      CODER_TELEMETRY_ENABLE: false
      CODER_ACCESS_URL: "http://127.0.0.1:${AVAILABLE_PORT:-8080}"
      CODER_ENABLE_TERRAFORM_DEBUG_MODE: true
    # add write permissions on the mounted docker socket to enable coder user to start containers
    group_add:
    - "${DOCKER_GROUP:-999}" # docker group on host
    volumes:
    # needed for coder to be able to launch workspaces w/ docker provisioner
    - /var/run/docker.sock:/var/run/docker.sock
    # mount /var/lib/docker from host so that image that was built by CI but not published yet is available to workspace
    - /var/lib/docker:/var/lib/docker
    depends_on:
      database:
        condition: service_healthy
  database:
    image: "postgres:16.5@sha256:53f3e608f9475ce120ced2d0f430b89458d7faa28530e0b0977a6af64d294877"
    environment:
      POSTGRES_USER: coder
      POSTGRES_PASSWORD: coder
      POSTGRES_DB: coder
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U coder -d coder",
        ]
      interval: 5s
      timeout: 5s
      retries: 5
