---
# yamllint disable rule:line-length
name: Lint all

on:
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
    - name: Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      with:
        fetch-depth: 1

    - name: Determine what files types have changed
      id: changed-files-yaml
      uses: tj-actions/changed-files@bab30c2299617f6615ec02a68b9a40d10bd21366 # v45
      with:
        files_yaml: |
          actions:
          - .github/workflows/**
          docker:
          - '**/Dockerfile'
          - '.hadolint.yaml'
          renovate:
          - .github/renovate.json
          - .github/renovate/**
          shellscripts:
          - '**.sh'
          terraform:
          - '**.tf'
          - '**/.terraform-version'
          - '**/.terraform.lock.hcl'
          - '.tflint.hcl'
          yaml:
          - '**.yaml'

    - name: Set up python
      uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5
      with:
        python-version: '3.12'

    - name: Setup mise
      uses: jdx/mise-action@5083fe46898c414b2475087cc79da59e7da859e8 # v2.1.11
      with:
        # renovate: datasource=github-releases depName=jdx/mise
        version: "v2025.1.0"
        install: true
        cache: true
        cache_key_prefix: mise-v1

    - name: Cache pre-commit hooks
      uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4
      with:
        path: ~/.cache/pre-commit/
        key: pre-commit-${{runner.os}}-${{runner.arch}}-${{env.pythonLocation}}-${{hashFiles('.pre-commit-config.yaml')}}
        restore-keys: |
          pre-commit--${{runner.os}}-${{runner.arch}}-

    - name: Install node packages
      run: npm ci --no-fund --no-audit

    - name: Install pre-commit hooks
      if: success() || failure()
      run: pre-commit install --install-hooks --hook-type pre-commit

    - name: check-added-large-files
      if: success() || failure()
      run: pre-commit run --all-files --color=always check-added-large-files

    - name: check-executables-have-shebangs
      if: success() || failure()
      run: pre-commit run --all-files --color=always check-executables-have-shebangs

    - name: check-json
      if: success() || failure()
      run: pre-commit run --all-files --color=always check-json

    - name: detect-private-key
      if: success() || failure()
      run: pre-commit run --all-files --color=always detect-private-key

    - name: end-of-file-fixer
      if: success() || failure()
      run: pre-commit run --all-files --color=always end-of-file-fixer

    - name: forbid-new-submodules
      if: success() || failure()
      run: pre-commit run --all-files --color=always forbid-new-submodules

    - name: mixed-line-ending
      if: success() || failure()
      run: pre-commit run --all-files --color=always mixed-line-ending

    - name: trailing-whitespace
      if: success() || failure()
      run: pre-commit run --all-files --color=always trailing-whitespace

    - name: terraform-fmt
      if: (success() || failure()) && (steps.changed-files-yaml.outputs.terraform_any_changed == 'true' || github.event_name == 'workflow_dispatch')
      run: pre-commit run --all-files --color=always terraform-fmt

    - name: terraform-validate
      if: (success() || failure()) && (steps.changed-files-yaml.outputs.terraform_any_changed == 'true' || github.event_name == 'workflow_dispatch')
      run: pre-commit run --all-files --color=always terraform-validate

    - name: tflint
      if: (success() || failure()) && (steps.changed-files-yaml.outputs.terraform_any_changed == 'true' || github.event_name == 'workflow_dispatch')
      run: pre-commit run --all-files --color=always tflint

    - name: yamllint
      if: (success() || failure()) && (steps.changed-files-yaml.outputs.yaml_any_changed == 'true' || github.event_name == 'workflow_dispatch')
      env:
        CHANGED_FILES: ${{ github.event_name == 'workflow_dispatch' && 'ALL' || steps.changed-files-yaml.outputs.yaml_all_changed_files }}
      shell: bash
      # yamllint disable-line rule:indentation
      run: |
        if [[ "${CHANGED_FILES}" == "ALL" ]]; then
          yamllint -c .yamllint --list-files --strict --format github .
        else
          yamllint -c .yamllint --list-files --strict --format github $CHANGED_FILES
        fi

    - name: shellcheck
      if: (success() || failure()) && (steps.changed-files-yaml.outputs.shellscripts_any_changed == 'true' || github.event_name == 'workflow_dispatch')
      env:
        CHANGED_FILES: ${{ github.event_name == 'workflow_dispatch' && 'ALL' || steps.changed-files-yaml.outputs.shellscripts_all_changed_files }}
      shell: bash
      # yamllint disable-line rule:indentation
      run: |
        if [[ "${CHANGED_FILES}" == "ALL" ]]; then
          set -x
          find . -type f -name '*.sh' -not -path './node_modules/*' -executable -exec shellcheck --rcfile .shellcheckrc {} +
          set +x
        else
          set -x
          shellcheck --rcfile .shellcheckrc $CHANGED_FILES
          set +x
        fi

    - name: hadolint
      if: (success() || failure()) && (steps.changed-files-yaml.outputs.docker_any_changed == 'true' || github.event_name == 'workflow_dispatch')
      uses: hadolint/hadolint-action@54c9adbab1582c2ef04b2016b760714a4bfde3cf # v3.1.0
      with:
        dockerfile: "Dockerfile"
        recursive: true
        failure-threshold: warning
        config: .hadolint.yaml

    - name: actionlint
      if: (success() || failure()) && (steps.changed-files-yaml.outputs.actions_any_changed == 'true' || github.event_name == 'workflow_dispatch')
      env:
        CHANGED_FILES: ${{ github.event_name == 'workflow_dispatch' && 'ALL' || steps.changed-files-yaml.outputs.actions_all_changed_files }}
      shell: bash
      # yamllint disable-line rule:indentation
      run: |
        if [[ "${CHANGED_FILES}" == "ALL" ]]; then
          set -x
          actionlint -shellcheck "shellcheck --rcfile .shellcheckrc"
          set +x
        else
          set -x
          actionlint -shellcheck "shellcheck --rcfile .shellcheckrc" $CHANGED_FILES
          set +x
        fi

    - name: commitlint
      if: (success() || failure()) && (github.event_name == 'pull_request')
      run: npx commitlint --color --from ${{ github.event.pull_request.head.sha }}~${{ github.event.pull_request.commits }} --to ${{ github.event.pull_request.head.sha }} --verbose

    - name: validate-renovate-config
      if: (success() || failure()) && (steps.changed-files-yaml.outputs.renovate_any_changed == 'true' || github.event_name == 'workflow_dispatch')
      shell: bash
      env:
        CHANGED_FILES: ${{ github.event_name == 'workflow_dispatch' && 'ALL' || steps.changed-files-yaml.outputs.renovate_all_changed_files }}
      # yamllint disable-line rule:indentation
      run: |
        if [[ "${CHANGED_FILES}" == "ALL" ]]; then
          echo "Validating main configuration..."
          echo ".github/renovate.json:"
          renovate-config-validator .github/renovate.json | pr -t -o 4
          echo "Validating all 'extends' configuration files..."
          for rc in $(find .github/renovate -type f -name '*.json' | sort); do
            echo "${rc}:"
            renovate-config-validator ${rc} | pr -t -o 4
          done
        else
          echo "Validating changed configuration files..."
          for rc in ${CHANGED_FILES}; do
            echo "${rc}:"
            renovate-config-validator ${rc} | pr -t -o 4
          done
        fi
